//////////////////////////////////////////////////
// addsynth.eel
// Copyright 2005, 2010, 2014, 2017 David Olofson
//////////////////////////////////////////////////

eelversion 0.3.7;

import SDL, math, oscilloscope as oscilloscope;

constant FS = 44100;
constant BUF = 2048;
constant FIFO = 8192;

export function main<args>
{
	local osc = oscilloscope.Open("AddSynth");

	OpenAudio(FS, BUF, FIFO);

	local ph = 0.;
	local vph = 0.;
	local dvph = 2. * PI * 3. / FS;

	while true
	mainloop:
	{
		while true
		{
			local ev = PollEvent();
			if not ev
				break;
			switch ev.type
			  case KEYUP
				if ev.sym == KESCAPE
					break mainloop;
			  case QUIT
				break mainloop;
		}
		while AudioSpace()
		{
			local f = 100. - (10. * sin(vph));
			vph += dvph;
			local dph = 2. * PI * f / FS;
			local s = 0.;
			local spread = 10. + (9. * sin(vph));
			local i = 0.;
			for i = 1., spread
				s += sin(ph * i) / i;
			s += sin(ph * i) / i * ((1. - i + spread) % 1.);
			s *= .5;
			PlayAudio(s, s);
			osc:Feed(s);
			ph += dph;
		}
		Delay(10);
	}

	CloseAudio();
	return 0;
}
